-- MySQL Script generated by MySQL Workbench
-- Mon May  7 12:04:35 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema shobingg_P2M_Operations
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema shobingg_P2M_Operations
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `shobingg_P2M_Operations` DEFAULT CHARACTER SET utf8 ;
USE `shobingg_P2M_Operations` ;

-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Currency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Currency` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `PointValue_Rate` DOUBLE NOT NULL,
  `USDRate` DOUBLE NOT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  `ISO` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Clients Invoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Clients Invoices` (
  `OrderNo` VARCHAR(45) NOT NULL,
  `EmployeeID` VARCHAR(45) NULL DEFAULT NULL,
  `FirstName` VARCHAR(45) NULL DEFAULT NULL,
  `LastName` VARCHAR(45) NULL DEFAULT NULL,
  `CatalogName` VARCHAR(100) NULL DEFAULT NULL,
  `Quantity` INT(11) NULL DEFAULT NULL,
  `OrderDate` DATE NULL DEFAULT NULL,
  `RedemptionPoints` VARCHAR(45) NULL DEFAULT NULL,
  `LocalCost` DOUBLE NULL DEFAULT NULL,
  `ReasonofReturen` VARCHAR(45) NULL DEFAULT 'None',
  `Currency_ID` INT(11) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  `Company` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`OrderNo`),
  INDEX `CurrencyID_idx` (`Currency_ID` ASC),
  CONSTRAINT `CurencyID`
    FOREIGN KEY (`Currency_ID`)
    REFERENCES `shobingg_P2M_Operations`.`Currency` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`ClientsDailyOrders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`ClientsDailyOrders` (
  `FirstName` VARCHAR(50) NOT NULL,
  `LastName` VARCHAR(50) NULL DEFAULT NULL,
  `DeptName` VARCHAR(100) NULL DEFAULT NULL,
  `DeptCode` VARCHAR(50) NULL DEFAULT NULL,
  `PIN` VARCHAR(50) NOT NULL,
  `EmployeeID` VARCHAR(50) NOT NULL,
  `JobTitle` VARCHAR(100) NULL DEFAULT NULL,
  `PhoneNumber` VARCHAR(50) NULL DEFAULT NULL,
  `CatalogName` VARCHAR(100) NOT NULL,
  `RewardName` VARCHAR(500) NOT NULL,
  `Quantity` INT(11) NOT NULL,
  `Details` VARCHAR(1500) NULL DEFAULT NULL,
  `HighestLevelCategory` VARCHAR(60) NULL DEFAULT NULL,
  `LowestLevelCategory` VARCHAR(60) NULL DEFAULT NULL,
  `ShipToCompany` VARCHAR(100) NULL DEFAULT NULL,
  `ShipToName` VARCHAR(70) NULL DEFAULT NULL,
  `ShipToAddress1` VARCHAR(500) NULL DEFAULT NULL,
  `ShipToAddress2` VARCHAR(500) NULL DEFAULT NULL,
  `ShipToCity` VARCHAR(50) NULL DEFAULT NULL,
  `ShipToState` VARCHAR(50) NULL DEFAULT NULL,
  `ShipToZipCode` VARCHAR(50) NULL DEFAULT NULL,
  `ShipToCountry` VARCHAR(50) NULL DEFAULT NULL,
  `P2MOrderNumber` VARCHAR(50) NOT NULL,
  `OrderStatus` VARCHAR(50) NOT NULL,
  `CurrentStatus` VARCHAR(50) NOT NULL,
  `DiscountCoupon` VARCHAR(50) NULL DEFAULT NULL,
  `RedemptionAmount` VARCHAR(50) NULL DEFAULT NULL,
  `DiscountApplied` VARCHAR(50) NULL DEFAULT NULL,
  `MemberPaid` VARCHAR(50) NULL DEFAULT NULL,
  `PointBillingRate` DOUBLE NULL DEFAULT NULL,
  `DateandTime` DATETIME NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`P2MOrderNumber`),
  UNIQUE INDEX `P2M Order Number_UNIQUE` (`P2MOrderNumber` ASC),
  UNIQUE INDEX `PIN_UNIQUE` (`PIN` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Company` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `NameAr` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL DEFAULT NULL,
  `Site` VARCHAR(500) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`, `Name`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 33
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`DailyOrders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`DailyOrders` (
  `ID` VARCHAR(45) NOT NULL,
  `PIN` VARCHAR(45) NULL DEFAULT NULL,
  `EmployeeID` VARCHAR(45) NOT NULL,
  `FirstName` VARCHAR(45) NULL DEFAULT NULL,
  `LastName` VARCHAR(45) NULL DEFAULT NULL,
  `DeptName` VARCHAR(100) NULL DEFAULT NULL,
  `DeptCode` VARCHAR(45) NULL DEFAULT NULL,
  `JobTitle` VARCHAR(100) NULL DEFAULT NULL,
  `PhoneNumber` VARCHAR(45) NULL DEFAULT NULL,
  `CatalogName` VARCHAR(100) NULL DEFAULT NULL,
  `RewardName` VARCHAR(500) NULL DEFAULT NULL,
  `Quantity` INT(11) NOT NULL,
  `Details` VARCHAR(1500) NULL DEFAULT NULL,
  `HighestLevelCategory` VARCHAR(55) NULL DEFAULT NULL,
  `LowestLevelCategory` VARCHAR(55) NULL DEFAULT NULL,
  `Company` VARCHAR(100) NULL DEFAULT NULL,
  `Name` VARCHAR(70) NULL DEFAULT NULL,
  `Address1` VARCHAR(500) NULL DEFAULT NULL,
  `Address2` VARCHAR(500) NULL DEFAULT NULL,
  `City` VARCHAR(50) NULL DEFAULT NULL,
  `State` VARCHAR(45) NULL DEFAULT NULL,
  `ZipCode` VARCHAR(45) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  `P2MOrderNumber` VARCHAR(45) NULL DEFAULT NULL,
  `Status` VARCHAR(45) NULL DEFAULT NULL,
  `CStatus` VARCHAR(45) NULL DEFAULT NULL,
  `DiscountCoupon` VARCHAR(45) NULL DEFAULT NULL,
  `RedemptionAmount` DOUBLE NULL DEFAULT '0',
  `DiscountApplied` VARCHAR(45) NULL DEFAULT NULL,
  `MemberPaid` VARCHAR(45) NULL DEFAULT '0',
  `PointBillingRate` DOUBLE NULL DEFAULT '0',
  `OrderDate` DATE NULL DEFAULT NULL,
  `GRSOrderNum` VARCHAR(45) NULL DEFAULT NULL,
  `ItemNumber` VARCHAR(45) NULL DEFAULT NULL,
  `ItemDescription` VARCHAR(100) NULL DEFAULT NULL,
  `ItemOption` VARCHAR(45) NULL DEFAULT NULL,
  `Email` VARCHAR(45) NULL DEFAULT NULL,
  `ProductCost` DOUBLE NULL DEFAULT '0',
  `CatalogCode` VARCHAR(45) NULL DEFAULT NULL,
  `DateProcessed` VARCHAR(45) NULL DEFAULT NULL,
  `QuantityShipped` INT(11) NULL DEFAULT '0',
  `TrackingNumber` VARCHAR(45) NULL DEFAULT NULL,
  `CourierName` VARCHAR(50) NULL DEFAULT NULL,
  `Memo` VARCHAR(500) NULL DEFAULT NULL,
  `Note` VARCHAR(100) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `PIN_UNIQUE` (`PIN` ASC),
  UNIQUE INDEX `P2M Order Number_UNIQUE` (`P2MOrderNumber` ASC),
  UNIQUE INDEX `GRS Order Num_UNIQUE` (`GRSOrderNum` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Department` (
  `ID` INT(11) NOT NULL,
  `Name` VARCHAR(100) NULL DEFAULT NULL,
  `NameAr` VARCHAR(100) NULL DEFAULT NULL,
  `Company_Id` INT(11) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  INDEX `Comp_ID_idx` (`Company_Id` ASC),
  CONSTRAINT `Comp_ID`
    FOREIGN KEY (`Company_Id`)
    REFERENCES `shobingg_P2M_Operations`.`Company` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Fees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Fees` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `RewardName` VARCHAR(500) NULL DEFAULT NULL,
  `ShippingCost` DOUBLE NULL DEFAULT NULL,
  `HandlingCost` DOUBLE NULL DEFAULT NULL,
  `ServiceCharge` DOUBLE NULL DEFAULT NULL,
  `Total` DOUBLE NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  `SKU` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 853
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`GCDailyOrders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`GCDailyOrders` (
  `GRSOrder` VARCHAR(45) NOT NULL DEFAULT '',
  `PartnerSystemOrder` VARCHAR(45) NULL DEFAULT NULL,
  `UserId` VARCHAR(45) NULL DEFAULT NULL,
  `FirstName` VARCHAR(70) NULL DEFAULT NULL,
  `LastName` VARCHAR(70) NULL DEFAULT NULL,
  `OrderDate` DATETIME NULL DEFAULT NULL,
  `CompanyName` VARCHAR(45) NULL DEFAULT NULL,
  `Address1` VARCHAR(500) NULL DEFAULT NULL,
  `Address2` VARCHAR(500) NULL DEFAULT NULL,
  `City` VARCHAR(45) NULL DEFAULT NULL,
  `State_Province` VARCHAR(45) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  `Zip_PostalCode` VARCHAR(45) NULL DEFAULT NULL,
  `PhoneNumber` VARCHAR(45) NULL DEFAULT NULL,
  `ItemNumber` VARCHAR(45) NULL DEFAULT NULL,
  `ItemDescription` VARCHAR(100) NULL DEFAULT NULL,
  `ItemOption` VARCHAR(45) NULL DEFAULT NULL,
  `Quantity` VARCHAR(45) NULL DEFAULT NULL,
  `Email` VARCHAR(45) NULL DEFAULT NULL,
  `ProductCost` DOUBLE NULL DEFAULT NULL,
  `CatalogCode` VARCHAR(45) NULL DEFAULT NULL,
  `CatalogName` VARCHAR(45) NULL DEFAULT NULL,
  `DateProcessed` VARCHAR(45) NULL DEFAULT NULL,
  `Status` VARCHAR(45) NULL DEFAULT NULL,
  `QuantityShipped` INT(11) NULL DEFAULT NULL,
  `TrackingNumber` VARCHAR(45) NULL DEFAULT NULL,
  `CourierName` VARCHAR(45) NULL DEFAULT NULL,
  `Memo` VARCHAR(500) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`GRSOrder`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Gift Cards Invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Gift Cards Invoice` (
  `OrderId` VARCHAR(45) NOT NULL,
  `EmployeeID` VARCHAR(45) NOT NULL,
  `LineNumber` VARCHAR(45) NOT NULL,
  `RewardName` VARCHAR(500) NOT NULL,
  `OrderDate` DATE NOT NULL,
  `LocalCost` DOUBLE NOT NULL,
  `Quantity` INT(11) NOT NULL,
  `ReasonofReturen` VARCHAR(50) NULL DEFAULT 'None',
  `Currency_ID` INT(11) NOT NULL,
  `Fees_ID` INT(11) NOT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`OrderId`),
  INDEX `CurrencyID_idx` (`Currency_ID` ASC),
  INDEX `FeesID_idx` (`Fees_ID` ASC),
  CONSTRAINT `CurrencyID`
    FOREIGN KEY (`Currency_ID`)
    REFERENCES `shobingg_P2M_Operations`.`Currency` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FeesID`
    FOREIGN KEY (`Fees_ID`)
    REFERENCES `shobingg_P2M_Operations`.`Fees` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Members` (
  `Pin` VARCHAR(45) NULL DEFAULT '',
  `EmployeeNumber` VARCHAR(45) NOT NULL,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(70) NOT NULL,
  `JobTitle` VARCHAR(100) NOT NULL,
  `HireDate` DATE NOT NULL,
  `BirthDate` DATE NOT NULL,
  `Address1` VARCHAR(45) NOT NULL,
  `Address2` VARCHAR(45) NULL DEFAULT NULL,
  `City` VARCHAR(45) NULL DEFAULT NULL,
  `Province_State` VARCHAR(45) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  `PostalCode` VARCHAR(45) NULL DEFAULT NULL,
  `TelephoneAreaCode` VARCHAR(45) NULL DEFAULT NULL,
  `TelephoneNumber` VARCHAR(45) NOT NULL,
  `TelephoneCountryCode` VARCHAR(45) NULL DEFAULT NULL,
  `LanguageCode` VARCHAR(45) NULL DEFAULT NULL,
  `DepartmentCode` VARCHAR(45) NULL DEFAULT NULL,
  `DepartmentName` VARCHAR(45) NULL DEFAULT NULL,
  `AccessGroups` VARCHAR(200) NULL DEFAULT NULL,
  `EmployeeType` VARCHAR(45) NOT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT '0',
  `DeletionDate` DATE NULL DEFAULT NULL,
  `Password` VARCHAR(45) NULL DEFAULT NULL,
  `DisableLogin` VARCHAR(45) NULL DEFAULT NULL,
  `DisableEarn` VARCHAR(45) NULL DEFAULT NULL,
  `Username` VARCHAR(45) NULL DEFAULT NULL,
  `FnameAR` VARCHAR(100) NULL DEFAULT NULL,
  `LnameAR` VARCHAR(100) NULL DEFAULT NULL,
  `PositionAr` VARCHAR(500) NULL DEFAULT NULL,
  `MNA` VARCHAR(45) NULL DEFAULT NULL,
  `MNE` VARCHAR(45) NULL DEFAULT NULL,
  `META` VARCHAR(45) NULL DEFAULT NULL,
  `Child` VARCHAR(45) NULL DEFAULT NULL,
  `MrgDate` DATE NULL DEFAULT NULL,
  `Comp_Id` INT(11) NULL DEFAULT NULL,
  `Dept_ID` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`EmployeeNumber`),
  UNIQUE INDEX `EmployeeNumber_UNIQUE` (`EmployeeNumber` ASC),
  INDEX `Dept_ID_idx` (`Dept_ID` ASC),
  INDEX `Memb_Comp_ID_idx` (`Comp_Id` ASC),
  CONSTRAINT `Me_Dep_ID`
    FOREIGN KEY (`Dept_ID`)
    REFERENCES `shobingg_P2M_Operations`.`Department` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Memb_Comp_ID`
    FOREIGN KEY (`Comp_Id`)
    REFERENCES `shobingg_P2M_Operations`.`Company` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Old Not shipped_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Old Not shipped_Orders` (
  `PIN` VARCHAR(45) NULL DEFAULT NULL,
  `EmployeeID` VARCHAR(45) NOT NULL,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `DeptName` VARCHAR(100) NULL DEFAULT NULL,
  `DeptCode` VARCHAR(45) NULL DEFAULT NULL,
  `JobTitle` VARCHAR(100) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  `CatalogName` VARCHAR(100) NOT NULL,
  `RewardName` VARCHAR(500) NOT NULL,
  `Quantity` INT(11) NOT NULL,
  `Details` VARCHAR(1500) NULL DEFAULT NULL,
  `HighestLevelCategory` VARCHAR(55) NULL DEFAULT NULL,
  `LowestLevelCategory` VARCHAR(55) NULL DEFAULT NULL,
  `Company` VARCHAR(100) NOT NULL,
  `Name` VARCHAR(70) NULL DEFAULT NULL,
  `Address1` VARCHAR(500) NULL DEFAULT NULL,
  `Address2` VARCHAR(500) NULL DEFAULT NULL,
  `City` VARCHAR(50) NULL DEFAULT NULL,
  `State` VARCHAR(45) NULL DEFAULT NULL,
  `ZipCode` VARCHAR(45) NULL DEFAULT NULL,
  `Country` VARCHAR(45) NULL DEFAULT NULL,
  `P2MOrderNumber` VARCHAR(45) NULL DEFAULT NULL,
  `OrderStatus` VARCHAR(45) NOT NULL,
  `DiscountCoupon` VARCHAR(45) NOT NULL,
  `RedemptionAmount` VARCHAR(45) NOT NULL,
  `DiscountApplied` VARCHAR(45) NOT NULL,
  `MemberPaid` VARCHAR(45) NOT NULL,
  `PointBillingRate` DOUBLE NULL DEFAULT NULL,
  `ordarDate` DATE NOT NULL,
  `GRSOrderNum` VARCHAR(45) NULL DEFAULT NULL,
  `PartnerSystemOrderNum` VARCHAR(45) NOT NULL,
  `ItemNumber` VARCHAR(45) NULL DEFAULT NULL,
  `ItemDescription` VARCHAR(100) NULL DEFAULT NULL,
  `ItemOption` VARCHAR(45) NULL DEFAULT NULL,
  `Email` VARCHAR(45) NULL DEFAULT NULL,
  `ProductCost` DOUBLE NULL DEFAULT NULL,
  `CatalogCode` VARCHAR(45) NULL DEFAULT NULL,
  `DateProcessed` VARCHAR(45) NOT NULL,
  `QuantityShipped` INT(11) NOT NULL,
  `TrackingNumber` VARCHAR(45) NOT NULL,
  `CourierName` VARCHAR(50) NOT NULL,
  `Memo` VARCHAR(500) NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`EmployeeID`),
  UNIQUE INDEX `PIN_UNIQUE` (`PIN` ASC),
  UNIQUE INDEX `P2M Order Number_UNIQUE` (`P2MOrderNumber` ASC),
  UNIQUE INDEX `GRS Order Num_UNIQUE` (`GRSOrderNum` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Oman Amount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Oman Amount` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `TotalRemainingAmount` DOUBLE NULL DEFAULT '0',
  `Dateofpayment` DATE NULL DEFAULT NULL,
  `PaymentstoOman` DOUBLE NULL DEFAULT NULL,
  `DeletionFlag` TINYINT(4) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `shobingg_P2M_Operations`.`Oman Float`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shobingg_P2M_Operations`.`Oman Float` (
  `OrderNo` VARCHAR(45) NOT NULL DEFAULT '',
  `OrderDate` DATE NULL DEFAULT NULL,
  `MemberName` VARCHAR(45) NULL DEFAULT NULL,
  `Totalcost` DOUBLE NULL DEFAULT '0',
  `Deliveryfees` DOUBLE NULL DEFAULT '0',
  `TotalCostwithDelivery` DOUBLE NULL DEFAULT '0',
  `Status` VARCHAR(45) NULL DEFAULT NULL,
  `DeliveryDate` DATE NULL DEFAULT NULL,
  `CardTypeandAmount` VARCHAR(50) NULL DEFAULT NULL,
  `Quantity` INT(11) NULL DEFAULT '0',
  `DeletionFlag` TINYINT(4) NULL DEFAULT '0',
  PRIMARY KEY (`OrderNo`),
  UNIQUE INDEX `OrderNo_UNIQUE` (`OrderNo` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `shobingg_P2M_Operations` ;

-- -----------------------------------------------------
-- procedure DeleteClientOrder
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteClientOrder`(

in VarOrderID varchar(45))
BEGIN

if (VarOrderID is not null) then 
 update `shobingg_P2M_Operations`.`ClientsDailyOrders`
 set 
 `DeletionFlag`=1;
 end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteClientsInvoice
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteClientsInvoice`(
IN VarOrderNO Varchar(45)
)
BEGIN
if VarOrderNO is not null then 
update `shobingg_P2M_Operations`.`Clients Invoices` 
set `DeletionFlag`=1
where  `OrderNo`=VarOrderNO;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteCompany
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteCompany`(
IN VarName varchar(45)
)
BEGIN
if VarName is not null then 
update `shobingg_P2M_Operations`.`Company` 
set `DeletionFlag` =1
where lower(`Name`) =lower(VarName) ;
end if;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteCurrency
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteCurrency`(
in VarID int(11)
)
BEGIN

if (VarID is not null) then
delete from `shobingg_P2M_Operations`.`Currency`
where `ID`=VarID;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteDailyOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteDailyOrders`(
IN VarID Varchar(45)
)
BEGIN
if VarID is not null then 
update `shobingg_P2M_Operations`.`DailyOrders` 
set `DeletionFlag`=1
where  ID=VarOrderNO;	
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteDepartments
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteDepartments`(
IN VarName varchar(100)
)
BEGIN
if VarName is not null then 
delete from 
`shobingg_P2M_Operations`.`Department`
where `Name`=VarName;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteFees
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteFees`(
IN VarID int(11)
)
BEGIN
if (VarID is not null) then
update  `shobingg_P2M_Operations`.`Fees`
set `DeletionFlag`=1
where `ID`=VarID;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteGCOrder
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteGCOrder`(

in VarOrderID varchar(45))
BEGIN

if (VarOrderID is not null) then 
 update `shobingg_P2M_Operations`.`GCDailyOrders`
 set 
 `DeletionFlag`=1;
 end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteGiftCardsInvoice
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteGiftCardsInvoice`(
IN VarOrderId Varchar(45)
)
BEGIN
if VarOrderId is not null then 
update `shobingg_P2M_Operations`.`Gift Cards Invoice`
set `DeletionFlag`=1
where  `OrderId`=VarOrderId;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteMember
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteMember`(

IN VarPin varchar(45) ,
IN VarEmpID varchar(45),
IN VarCompName varchar(45)
)
BEGIN

declare comp_ID int(11);

select ID into comp_ID from `shobingg_P2M_Operations`.`Company` where `Name` =VarCompName ;
case 

when(VarPin is not null and VarEmpID is null) then 
UPDATE  `shobingg_P2M_Operations`.`Members`
set `DeletionFlag` = 1 where  (`VarPin`=Pin );

when( VarPin is  null and VarEmpID is not null) then 
UPDATE  `shobingg_P2M_Operations`.`Members`
set `DeletionFlag` = 1 where (`Comp_Id`=comp_ID and `EmployeeNumber`=VarEmpID);

when( VarPin is  null and VarEmpID is  null) then 
UPDATE  `shobingg_P2M_Operations`.`Members`
set `DeletionFlag` = 1 where (`Comp_Id`=comp_ID);

else
UPDATE  `shobingg_P2M_Operations`.`Members`
set `DeletionFlag` = 1 where (`Comp_Id`=comp_ID and `EmployeeNumber`=VarEmpID);

end case;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteOldNOtShippedOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteOldNOtShippedOrders`(
IN VarOrderNO Varchar(45)
)
BEGIN
DECLARE chekrecored Varchar(45);

select PIN into  chekrecored from `shobingg_P2M_Operations`.`Old Not shipped_Orders`
where P2MOrderNumber=VarOrderNO;

case
when chekrecored is not null then 
update `shobingg_P2M_Operations`.`Old Not shipped_Orders`
set `DeletionFlag`=1 
where  P2MOrderNumber=VarOrderNO;

when chekrecored is null then
update `shobingg_P2M_Operations`.`Old Not shipped_Orders`
set `DeletionFlag`=1 
where GRSOrderNum=VarOrderNO;

end case; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteOman
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteOman`(
IN VarOrderNO Varchar(45)
)
BEGIN
if VarOrderNO is not null then 
update `shobingg_P2M_Operations`.`Oman Float`
set `DeletionFlag`=1
where  `OrderNo`=VarOrderNO;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure DeleteOmanAmount
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `DeleteOmanAmount`(
in VarID int(11)
)
BEGIN
delete from  `shobingg_P2M_Operations`.`Oman Amount`
where `ID`=VarID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetAmount
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetAmount`(

)
BEGIN
declare VarPaymentstoOman double;
declare VarTotalCostwithDelivery double;
declare VarTotal double;
select sum(TotalCostwithDelivery) into VarTotalCostwithDelivery 
from `shobingg_P2M_Operations`.`Oman Float` 
where `DeletionFlag`!=1 ; 

select sum(PaymentstoOman) into VarPaymentstoOman 
from `shobingg_P2M_Operations`.`Oman Amount` 
where `DeletionFlag`!=1 ; 

set VarTotal= VarPaymentstoOman-VarTotalCostwithDelivery;

select VarTotal as 'TotalRemainingAmount';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetCLientOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetCLientOrders`(
IN VarOrderID varchar(45)
)
BEGIN
if (VarOrderID is not null ) then 
SELECT * FROM `shobingg_P2M_Operations`.`ClientsDailyOrders`
where (`P2MOrderNumber`=VarOrderID and `DeletionFlag`=0);
else 
SELECT * FROM `shobingg_P2M_Operations`.`ClientsDailyOrders`
where (`DeletionFlag`=0);
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetClientsInvoices
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetClientsInvoices`(

IN VarOrderNo varchar(45),
IN VarEmployeeID varchar(45),
IN VarStartDate date,
IN VarEndDate Date,
IN VarCompany int(11)

)
BEGIN


case 


when (VarOrderNo is not null and ((VarStartDate is null and VarEndDate is null)
 and VarCompany =0 ))then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost' from
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID)and (`OrderNo`=VarOrderNo and a.DeletionFlag!=1))
 GROUP BY a.OrderNo;
 
 
 
 
 
 when (VarOrderNo is not null and ((VarStartDate is null and VarEndDate is null)
 and VarCompany !=0 ))then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost' from
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID)and (`OrderNo`=VarOrderNo and a.DeletionFlag!=1)
 and (`Company`like VarCompany) or `Company` is null)
 GROUP BY a.OrderNo;
	
 
 when ((VarStartDate is not null) and (VarEndDate is not null) and
 (VarCompany !=0))then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost'
 From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID and (a.DeletionFlag!=1))and 
 (`OrderDate` BETWEEN VarStartDate and VarEndDate)and 
 ((`Company` like VarCompany)or (`Company` is null)))
 GROUP BY a.OrderNo;




when (VarEmployeeID is not null and (VarCompany !=0)) then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost' From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID )and
 (`EmployeeID`=VarEmployeeID and (a.DeletionFlag!=1)) and (`Company` like VarCompany)and ((`Company` like VarCompany)or `Company` is null))
 GROUP BY a.OrderNo;
 
 
 
 when (VarEmployeeID is not null and (VarCompany =0)) then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost' From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID )and
 (`EmployeeID`=VarEmployeeID and (a.DeletionFlag!=1)) and (`Company` like VarCompany))
 GROUP BY a.OrderNo;
 
 /*when ((VarCompany >0)) then 
select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost' From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where ((a.Currency_ID = b.ID )and
 ((a.DeletionFlag!=1)) and ((`Company` like VarCompany)or (`Company` is null)))
 GROUP BY a.OrderNo;*/
 
else 

select a.OrderNo,
a.EmployeeID,
a.FirstName,
a.LastName,
a.CatalogName,
a.Quantity,
a.OrderDate,
(a.RedemptionPoints)as 'RedemptionPoints',
a.ReasonofReturen,
a.Country,
(a.LocalCost*b.PointValue_Rate*a.Quantity) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate) as 'USDCost'
 From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where (a.Currency_ID = b.ID and (a.DeletionFlag!=1)and (`Company` like VarCompany));
end case;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetCompany
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetCompany`(
IN VarName varchar(45)
)
BEGIN
if VarName is not null then 
select * from 
`shobingg_P2M_Operations`.`Company`
where (`Name`=VarName and `DeletionFlag`!=1);
else 
select * from 
`shobingg_P2M_Operations`.`Company`
where `DeletionFlag`!=1;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetCurrency
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetCurrency`(

)
BEGIN
select * from `shobingg_P2M_Operations`.`Currency`
where `DeletionFlag`!=1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetDailyOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetDailyOrders`(
IN VarID Varchar(45)
)
BEGIN
if VarID is not null then 
select * from `shobingg_P2M_Operations`.`DailyOrders` 
where  `ID`=VarID and `DeletionFlag`!=1;

else select * from `shobingg_P2M_Operations`.`DailyOrders`
where `DeletionFlag`!=1;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetDepartments
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetDepartments`(
IN VarName varchar(100)

)
BEGIN
if VarName is not null then 
select department.*,company.Name as 'CompanyName' from 
`shobingg_P2M_Operations`.`Department`as department ,
`shobingg_P2M_Operations`.`Company` as company
where((company.ID=department.Company_Id) and 
(department.Name=VarName)and (department.DeletionFlag!=1));
else 
select department.*,company.Name as'CompanyName' from 
`shobingg_P2M_Operations`.`Department`as department ,
`shobingg_P2M_Operations`.`Company` as company
where(company.ID=department.Company_Id)and (department.DeletionFlag!=1);
end if ;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetFees
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetFees`(
in VarRName varchar(500)
)
BEGIN
if VarRName is null then
select * from `shobingg_P2M_Operations`.`Fees`
where `DeletionFlag`!=1;

else 
select * from `shobingg_P2M_Operations`.`Fees`
where `DeletionFlag`!=1 and (`RewardName`like VarRName);
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetGCOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetGCOrders`(
IN VarOrderID varchar(45)
)
BEGIN
if (VarOrderID is not null ) then 
SELECT * FROM `shobingg_P2M_Operations`.`GCDailyOrders`
where (`GRSOrder`=VarOrderID and `DeletionFlag`=0);
else 
SELECT * FROM `shobingg_P2M_Operations`.`GCDailyOrders`
where `DeletionFlag`=0;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetGCTotal
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetGCTotal`(IN VarStartDate Date,
IN VarEndDate Date)
BEGIN
DECLARE USDCost double;

/*select  (a.LocalCost*a.Quantity*c.USDRate) into USDCost
From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where a.Currency_ID = c.ID and a.Fees_ID=b.ID;*/
 
 case 
  when (VarStartDate is not null and VarEndDate is not null )then 
 select 
sum(a.LocalCost*a.Quantity*c.USDRate) as 'TotalUSDCost', 
sum(a.LocalCost) as 'TotalLocalCost',c.USDRate,
c.PointValue_Rate
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (`OrderDate` BETWEEN VarStartDate and VarEndDate)and(a.DeletionFlag!=1));
else
select sum(a.LocalCost*a.Quantity*c.USDRate) as 'TotalUSDCost', 
sum(a.LocalCost) as 'TotalLocalCost',c.USDRate,
c.PointValue_Rate
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where (a.Currency_ID = c.ID and a.Fees_ID=b.ID and(a.DeletionFlag!=1));


end case;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetGiftCardsInvoice
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetGiftCardsInvoice`(

IN VarOrderId varchar(45),
IN VarEMPID varchar(45) ,
/*IN VarQuantity int(11),*/
IN VarStartDate Date,
IN VarEndDate Date

)
BEGIN
/*DECLARE USDCost double;

select  (a.LocalCost*a.Quantity*c.PointValue_Rate*b.Total) into USDCost
From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where a.Currency_ID = c.ID and a.Fees_ID=b.ID;*/
 
 
case 

when (VarOrderId is not null and (VarStartDate is null and VarEndDate is null ))then 
select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost' 

 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (a.OrderId=VarOrderId)and(a.DeletionFlag!=1));

when (VarEMPID is not null and (VarStartDate is null and VarEndDate is null ))then 
select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost' 

 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (a.EmployeeID=VarEMPID)and(a.DeletionFlag!=1));
 
 
 
 
 when (VarStartDate is not null and VarEndDate is not null )then 
 select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost' 
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (`OrderDate` BETWEEN VarStartDate and VarEndDate)and(a.DeletionFlag!=1));





when VarQuantity>0 then 
select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost'
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (`Quantity`>=VarQuantity)and(a.DeletionFlag!=1));

when VarOrderId is not null then 
select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost'
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where ((a.Currency_ID = c.ID and a.Fees_ID=b.ID)and (`OrderId`=VarOrderId and a.DeletionFlag!=1));
 else 
 select a.*,b.SKU,
(a.LocalCost*a.Quantity*c.PointValue_Rate) as 'USDCost'
 From 
 `shobingg_P2M_Operations`.`Gift Cards Invoice` as a ,
 `shobingg_P2M_Operations`.`Fees`as b, 
 `shobingg_P2M_Operations`.`Currency` as c
 where (a.Currency_ID = c.ID and a.Fees_ID=b.ID and(a.DeletionFlag!=1));


end case;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetInvoiceTotal
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetInvoiceTotal`(
IN VarStartDate date,
IN VarEndDate Date,
IN VarCompany int(11))
BEGIN
case 
	
 
 when ((VarStartDate is not null and VarEndDate is not null) and VarCompany!=0  )then 
select a.*,b.PointValue_Rate,b.USDRate,(a.LocalCost*b.PointValue_Rate*a.Quantity*-1) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate*-1) as 'USDCost' ,
sum(a.LocalCost*a.Quantity*b.USDRate*-1) as 'TotalUSDCost',
 sum(a.LocalCost*b.PointValue_Rate*a.Quantity*-1) as 'TotalLocalCost'
 From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where 
 ((a.Currency_ID = b.ID and (a.DeletionFlag!=1))
 and
 (`OrderDate` BETWEEN VarStartDate and VarEndDate) and (`Company` like VarCompany))
;

else 

select a.*,b.PointValue_Rate,b.USDRate,(a.LocalCost*b.PointValue_Rate*a.Quantity*-1) as 'LocalCost',
(a.LocalCost*a.Quantity*b.USDRate*-1) as 'USDCost' ,
sum(a.LocalCost*a.Quantity*b.USDRate*-1) as 'TotalUSDCost',
 sum(a.LocalCost*b.PointValue_Rate*a.Quantity*-1) as 'TotalLocalCost'
 From 
 `shobingg_P2M_Operations`.`Clients Invoices` as a ,
 `shobingg_P2M_Operations`.`Currency` as b
 where (a.Currency_ID = b.ID and (a.DeletionFlag!=1)and (`Company` like VarCompany));
end case;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetMembers
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetMembers`(
IN VarEMPID varchar(45),
IN VarCompID int(11),
IN Varname varchar(45)
)
BEGIN
/*declare VarCompID int(11);
select ID into VarCompID
from `shobingg_P2M_Operations`.`Company` where lower(`Name`)=lower(VarCompName);*/
CASE

/*WHEN (VarEMPID is not null and  VarCompID is not null ) then
 (select a.*,b.Name as 'DepartmentName' , c.Name as 'CompanyName'
from `shobingg_P2M_Operations`.`Members` as a left join 
 `shobingg_P2M_Operations`.`Department` as b on  (a.Dept_ID=b.ID) left join
 `shobingg_P2M_Operations`.`Company` c on (a.Comp_Id=c.ID)
 where(a.DeletionFlag=0 or a.DeletionFlag is null));*/

 WHEN (VarEMPID is not null )then
 (select a.*,b.Name as 'DepartmentName' , c.Name as 'CompanyName'
from `shobingg_P2M_Operations`.`Members` as a left join 
 `shobingg_P2M_Operations`.`Department` as b on  (a.Dept_ID=b.ID) left join
 `shobingg_P2M_Operations`.`Company` c on (a.Comp_Id=c.ID)
 where((a.DeletionFlag=0 or a.DeletionFlag is null) and ((a.EmployeeNumber=VarEMPID)
 and (a.Comp_Id=VarCompID))));

WHEN (VarCompID is not null) then
 (select a.*,b.Name as 'DepartmentName' , c.Name as 'CompanyName'
from `shobingg_P2M_Operations`.`Members` as a left join 
 `shobingg_P2M_Operations`.`Department` as b on  (a.Dept_ID=b.ID) left join
 `shobingg_P2M_Operations`.`Company` c on (a.Comp_Id=c.ID)
 where((a.DeletionFlag=0 or a.DeletionFlag is null )and (c.ID=VarCompID)));

WHEN (Varname is not null)
then (
select a.*,b.Name as 'DepartmentName' , c.Name as 'CompanyName'
from `shobingg_P2M_Operations`.`Members` as a left join 
 `shobingg_P2M_Operations`.`Department` as b on  (a.Dept_ID=b.ID) left join
 `shobingg_P2M_Operations`.`Company` c on (a.Comp_Id=c.ID)
 where((a.DeletionFlag=0 or a.DeletionFlag is null) and
 (((LOWER(`FirstName`) like LOWER(Concat(Concat('%',Varname),'%')))or
 (LOWER(`LastName`) like LOWER(Concat(Concat('%',Varname),'%')))))));

else (select a.*,b.Name as 'DepartmentName' , c.Name as 'CompanyName'
from `shobingg_P2M_Operations`.`Members` as a left join 
 `shobingg_P2M_Operations`.`Department` as b on  (a.Dept_ID=b.ID) left join
 `shobingg_P2M_Operations`.`Company` c on (a.Comp_Id=c.ID)
 where(a.DeletionFlag=0 or a.DeletionFlag is null));

end case;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetOldNOtShippedOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetOldNOtShippedOrders`(
IN VarOrderNO Varchar(45)
)
BEGIN
if VarOrderNO is not null then 
select * from `shobingg_P2M_Operations`.`Old Not shipped_Orders` 
where  P2MOrderNumber=VarOrderNO and `DeletionFlag`!=1;

else select * from `shobingg_P2M_Operations`.`Old Not shipped_Orders`
where `DeletionFlag`!=1;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure GetOmanInformaion
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `GetOmanInformaion`(
IN VarOrderNO Varchar(45)
)
BEGIN
if VarOrderNO is not null then 
select *
from `shobingg_P2M_Operations`.`Oman Float`
where  OrderNo=VarOrderNO and (`DeletionFlag`!=1);

else select *
from `shobingg_P2M_Operations`.`Oman Float`
where `DeletionFlag`!=1 ;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure OldNOtShippedOrdersDelete
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `OldNOtShippedOrdersDelete`(
IN VarOrderNO Varchar(45)
)
BEGIN
if VarOrderNO is not null then 
delete from `shobingg_P2M_Operations`.`Old Not shipped_Orders` 
where  P2MOrderNumber=VarOrderNO;

else delete from `shobingg_P2M_Operations`.`Old Not shipped_Orders`;
end if; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure OmanAddAmount
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `OmanAddAmount`(
in varID int(11),
IN VarPaymentstoOman double,
IN VarDateofpayment date
)
BEGIN
declare idcnt int(11);
select count(*) into idcnt from `shobingg_P2M_Operations`.`Oman Amount` where `ID`=varID;

if (idcnt > 0) then
UPDATE `shobingg_P2M_Operations`.`Oman Amount`

set
PaymentstoOman=VarPaymentstoOman,
Dateofpayment=VarDateofpayment,
DeletionFlag=0
where `ID`=varID;
else 
INSERT INTO `shobingg_P2M_Operations`.`Oman Amount`

(`ID`,
`PaymentstoOman`,
`Dateofpayment`,
`DeletionFlag`)

VALUES
(varID,
VarPaymentstoOman,
VarDateofpayment,
0);

end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpdateCurrency
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpdateCurrency`(
in 	VarID int(11),
IN VarName varchar(45) ,
IN VarCountry varchar(45),
IN VarPointValue_Rate double,
in VarUSDRate double,
in VarISO varchar(45)
)
BEGIN
UPDATE `shobingg_P2M_Operations`.`Currency`
set
Name=VarName,
Country=VarCountry,
PointValue_Rate=VarPointValue_Rate,
USDRate=VarUSDRate,
ISO=VarISO,
DeletionFlag=0
where `ID`=VarID;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertClientsInvoices
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertClientsInvoices`(


IN VarOrderNo varchar(45),
IN VarEmployeeID varchar(45),
IN VarFirstName varchar(45),
IN VarLastName varchar(500) ,
IN VarCatalogName varchar(100),
IN VarQuantity int(11),
IN VarOrderDate date,
IN VarRedemptionPoints varchar(45),
IN VarLocalCost double,
IN VarCountry varchar(45),
IN VarReasonofReturen varchar(50)


)
BEGIN
DECLARE CurrencyID int(11);
declare Comp int(11);

Select id into CurrencyID from `shobingg_P2M_Operations`.`Currency`
where lower(`ISO`) like lower(VarCountry);

Select `Comp_Id` into Comp from (select * from `shobingg_P2M_Operations`.`Members`
where `EmployeeNumber` =VarEmployeeID) as comp;


INSERT INTO `shobingg_P2M_Operations`.`Clients Invoices`
(`OrderNo`,
`EmployeeID`,
`FirstName`,
`LastName`,
`CatalogName`,
`Quantity`,
`OrderDate`,
`RedemptionPoints`,
`LocalCost`,
`ReasonofReturen`,
`Currency_ID`,
`DeletionFlag`,
`Country`,
`Company`)

values
(VarOrderNo,
VarEmployeeID,
VarFirstName,
VarLastName,
VarCatalogName,
VarQuantity,
VarOrderDate,
abs(VarRedemptionPoints),
abs(VarLocalCost),
VarReasonofReturen,
CurrencyID,
0,
VarCountry,
Comp)

on duplicate key update 
EmployeeID=VarEmployeeID,
FirstName=VarFirstName,
LastName=VarLastName,
CatalogName=VarCatalogName,
Quantity=VarQuantity,
OrderDate=VarOrderDate,
RedemptionPoints=abs(VarRedemptionPoints),
LocalCost=abs(VarLocalCost),
ReasonofReturen=VarReasonofReturen,
Currency_ID=CurrencyID,
DeletionFlag=0,
Country=VarCountry,
Company=Comp;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertClinetsDaily
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertClinetsDaily`(
IN VarID varchar(45),
IN VarPIN    varchar(45),
IN VarEmployeeID    varchar(45),
IN VarFirstName    varchar(45),
IN VarLastName    varchar(45),
IN VarDeptName    varchar(100),
IN VarDeptCode    varchar(45),
IN VarJobTitle    varchar(100),
IN VarPhoneNumber    varchar(45),
IN VarCatalogName    varchar(100),
IN VarRewardName    varchar(500),
IN VarQuantity   int(11),
IN VarDetails    varchar(1500),
IN VarHighestLevelCategory    varchar(55),
IN VarLowestLevelCategory    varchar(55),
IN VarCompany    varchar(100),
IN VarName    varchar(70),
IN VarAddress1    varchar(500),
IN VarAddress2    varchar(500),
IN VarCity    varchar(50),
IN VarState    varchar(45),
IN VarZipCode    varchar(45),
IN VarCountry    varchar(45),
IN VarP2MOrderNumber    varchar(45),
IN VarOrderStatus    varchar(45),
IN VarCurrentStatus    varchar(45),
IN VarDiscountCoupon    varchar(45),
IN VarRedemptionAmount    double,
IN VarDiscountApplied    varchar(45),
IN VarMemberPaid    varchar(45),
IN VarPointBillingRate    double,
IN VarOrderDate    datetime
)
BEGIN

INSERT INTO `shobingg_P2M_Operations`.`DailyOrders`
(`ID`,
`PIN`,
`EmployeeID`,
`FirstName`,
`LastName`,
`DeptName`,
`DeptCode`,
`JobTitle`,
`PhoneNumber`,
`CatalogName`,
`RewardName`,
`Quantity`,
`Details`,
`HighestLevelCategory`,
`LowestLevelCategory`,
`Company`,
`Name`,	
`Address1`,
`Address2`,
`City`,
`State`,
`ZipCode`,
`Country`,
`P2MOrderNumber`,
`Status`,
`CStatus`,
`DiscountCoupon`,
`RedemptionAmount`,
`DiscountApplied`,
`MemberPaid`,
`PointBillingRate`,
`OrderDate`,
`DeletionFlag`,
`ProductCost`,
`QuantityShipped`)
VALUES
(VarID,
VarPIN,
VarEmployeeID,
VarFirstName,
VarLastName,
VarDeptName,
VarDeptCode,
VarJobTitle,
VarPhoneNumber,
VarCatalogName,
VarRewardName,
VarQuantity,
VarDetails,
VarHighestLevelCategory,
VarLowestLevelCategory,
VarCompany,
VarName,
VarAddress1,
VarAddress2,
VarCity,
VarState,
VarZipCode,
VarCountry,
VarP2MOrderNumber,
VarOrderStatus,
VarCurrentStatus,
VarDiscountCoupon,
VarRedemptionAmount,
VarDiscountApplied,
VarMemberPaid,
VarPointBillingRate,
VarOrderDate,
0,
0,
0)
 on duplicate key update 
PIN=VarPIN,
EmployeeID=VarEmployeeID,
FirstName=VarFirstName,
LastName=VarLastName,
DeptName=VarDeptName,
DeptCode=VarDeptCode,
JobTitle=VarJobTitle,
PhoneNumber=VarPhoneNumber,
CatalogName=VarCatalogName,
RewardName=VarRewardName,
Quantity=VarQuantity,
Details=VarDetails,
HighestLevelCategory=VarHighestLevelCategory,
LowestLevelCategory=VarLowestLevelCategory,
Company=VarCompany,
Name=VarName,
Address1=VarAddress1,
Address2=VarAddress2,
City=VarCity,
State=VarState,
ZipCode=VarZipCode,
P2MOrderNumber=VarP2MOrderNumber,
Country=VarCountry,
Status=VarOrderStatus,
CStatus=VarCurrentStatus,
DiscountCoupon=VarDiscountCoupon,
RedemptionAmount=VarRedemptionAmount,
DiscountApplied=VarDiscountApplied,
MemberPaid=VarMemberPaid,
PointBillingRate=VarPointBillingRate,
OrderDate=VarOrderDate,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertCompany
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertCompany`(

IN VarName varchar(45),
IN VarCountry varchar(45),
IN VarNameAr NVARCHAR(100),
IN VarSite varchar(500)
)
BEGIN
INSERT INTO `shobingg_P2M_Operations`.`Company`
(`Name`,
`Country`,
`NameAr`,
`Site`,
`DeletionFlag`)
VALUES
(VarName,
VarCountry,
VarNameAr,
VarSite,
0)

on duplicate key update

Name=VarName,
Country=VarCountry,
NameAr=VarNameAr,
Site=VarSite,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertDailyOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertDailyOrders`(
IN VarID   varchar(45),
IN VarPIN    varchar(45),
IN VarEmployeeID    varchar(45),
IN VarFirstName    varchar(45),
IN VarLastName    varchar(45),
IN VarDeptName    varchar(100),
IN VarDeptCode    varchar(45),
IN VarJobTitle    varchar(100),
IN VarPhoneNumber    varchar(45),
IN VarCatalogName    varchar(100),
IN VarRewardName    varchar(500),
IN VarQuantity   int(11),
IN VarDetails    varchar(1500),
IN VarHighestLevelCategory    varchar(55),
IN VarLowestLevelCategory    varchar(55),
IN VarCompany    varchar(100),
IN VarName    varchar(70),
IN VarAddress1    varchar(500),
IN VarAddress2    varchar(500),
IN VarCity    varchar(50),
IN VarState    varchar(45),
IN VarZipCode    varchar(45),
IN VarCountry    varchar(45),
IN VarP2MOrderNumber    varchar(45),
IN VarStatus    varchar(45),
IN VarCStatus    varchar(45),
IN VarDiscountCoupon    varchar(45),
IN VarRedemptionAmount    varchar(45),
IN VarDiscountApplied    varchar(45),
IN VarMemberPaid    varchar(45),
IN VarPointBillingRate    double,
IN VarOrderDate    date,
IN VarGRSOrderNum    varchar(45),
IN VarItemNumber    varchar(45),
IN VarItemDescription    varchar(100),
IN VarItemOption    varchar(45),
IN VarEmail    varchar(45),
IN VarProductCost   double,
IN VarCatalogCode    varchar(45),
IN VarDateProcessed    varchar(45),
IN VarQuantityShipped    int(11),
IN VarTrackingNumber    varchar(45),
IN VarCourierName    varchar(50),
IN VarMemo varchar(500),
IN VarNote varchar(100)
)
BEGIN
INSERT INTO `shobingg_P2M_Operations`.`DailyOrders`
(`ID`,
`PIN`,
`EmployeeID`,
`FirstName`,
`LastName`,
`DeptName`,
`DeptCode`,
`JobTitle`,
`PhoneNumber`,
`CatalogName`,
`RewardName`,
`Quantity`,
`Details`,
`HighestLevelCategory`,
`LowestLevelCategory`,
`Company`,
`Name`,
`Address1`,
`Address2`,
`City`,
`State`,
`ZipCode`,
`Country`,
`P2MOrderNumber`,
`Status`,
`CStatus`,
`DiscountCoupon`,
`RedemptionAmount`,
`DiscountApplied`,
`MemberPaid`,
`PointBillingRate`,
`OrderDate`,
`GRSOrderNum`,
`ItemNumber`,
`ItemDescription`,
`ItemOption`,
`Email`,
`ProductCost`,
`CatalogCode`,
`DateProcessed`,
`QuantityShipped`,
`TrackingNumber`,
`CourierName`,
`Memo`,
`Note`,
`DeletionFlag`)
VALUES
(VarID,
VarPIN,
VarEmployeeID,
VarFirstName,
VarLastName,
VarDeptName,
VarDeptCode,
VarJobTitle,
VarPhoneNumber,
VarCatalogName,
VarRewardName,
VarQuantity,
VarDetails,
VarHighestLevelCategory,
VarLowestLevelCategory,
VarCompany,
VarName,
VarAddress1,
VarAddress2,
VarCity,
VarState,
VarZipCode,
VarCountry,
VarP2MOrderNumber,
VarStatus,
VarCStatus,
VarDiscountCoupon,
VarRedemptionAmount,
VarDiscountApplied,
VarMemberPaid,
VarPointBillingRate,
VarOrderDate,
VarGRSOrderNum,
VarItemNumber,
VarItemDescription,
VarItemOption,
VarEmail,
VarProductCost,
VarCatalogCode,
VarDateProcessed,
VarQuantityShipped,
VarTrackingNumber,
VarCourierName,
VarMemo,
VarNote,
0)
 on duplicate key update 
PIN=VarPIN,
EmployeeID=VarEmployeeID,
FirstName=VarFirstName,
LastName=VarLastName,
DeptName=VarDeptName,
DeptCode=VarDeptCode,
JobTitle=VarJobTitle,
PhoneNumber=VarPhoneNumber,
CatalogName=VarCatalogName,
RewardName=VarRewardName,
Quantity=VarQuantity,
Details=VarDetails,
HighestLevelCategory=VarHighestLevelCategory,
LowestLevelCategory=VarLowestLevelCategory,
Company=VarCompany,
Name=VarName,
Address1=VarAddress1,
Address2=VarAddress2,
City=VarCity,
State=VarState,
ZipCode=VarZipCode,
Country=VarCountry,
P2MOrderNumber=VarP2MOrderNumber,
Status	=VarStatus,
CStatus=VarCStatus,
DiscountCoupon=VarDiscountCoupon,
RedemptionAmount=VarRedemptionAmount,
DiscountApplied=VarDiscountApplied,
MemberPaid=VarMemberPaid,
PointBillingRate=VarPointBillingRate,
OrderDate=VarOrderDate,
GRSOrderNum=VarGRSOrderNum,
ItemNumber=VarItemNumber,
ItemDescription=VarItemDescription,
ItemOption=VarItemOption,
Email=VarEmail,
ProductCost=VarProductCost,
CatalogCode=VarCatalogCode,
DateProcessed=VarDateProcessed,
QuantityShipped=VarQuantityShipped,
TrackingNumber=VarTrackingNumber,
CourierName=VarCourierName,
Memo=VarMemo,
Note=VarNote,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertDepartments
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertDepartments`(
IN VArID int(11),
IN VarName varchar(100),
IN VarNameAr varchar(100),
IN VarCompany varchar(100)
)
BEGIN
Declare Comp_ID int(11);

Select Id into Comp_ID from `shobingg_P2M_Operations`.`Company` as comp where 
comp.Name=VarCompany;

INSERT INTO `shobingg_P2M_Operations`.`Department`
(`ID`,
`Name`,
`NameAr`,
`Company_Id`,
`DeletionFlag`)
VALUES
(VArID,
VarName,
VarNameAr,
Comp_ID,
0)
on duplicate key update 
Name=VarName,
NameAr=VarNameAr,
Company_Id=Comp_ID,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertFees
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertFees`(

IN VarID int(11),
IN VarRewardName varchar(500),
IN VarShippingCost double,
IN VarHandlingCost double,
IN VarServiceCharge double,
in VarSKU varchar(45)
)
BEGIN
declare VTotal double;
declare VarRID int(11);
set VTotal= VarShippingCost+VarHandlingCost+VarServiceCharge;
select count(*) into VarRID from `shobingg_P2M_Operations`.`Fees` where `ID`=VarID;

/*if VarID is null then */
if (VarRID > 0)
then
UPDATE `shobingg_P2M_Operations`.`Fees`
set RewardName=VarRewardName,
ShippingCost=VarShippingCost,
HandlingCost=VarHandlingCost,
ServiceCharge=VarServiceCharge,
Total=VTotal,
DeletionFlag=0;
else 
INSERT INTO `shobingg_P2M_Operations`.`Fees`
(`ID`,
`RewardName`,
`ShippingCost`,
`HandlingCost`,
`ServiceCharge`,
`Total`,
`DeletionFlag`,
`SKU`)
VALUES
(VarID,
VarRewardName,
VarShippingCost,
VarHandlingCost,
VarServiceCharge,
VTotal,
0
,VarSKU);
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertGCDailyOrders
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertGCDailyOrders`(
IN VarID varchar(45),
IN VarGRSOrderNum    varchar(45),
IN VarPartnerSystemOrderNum    varchar(45),
IN VarEmployeeID    varchar(45),
IN VarFirstName    varchar(45),
IN VarLastName    varchar(45),
IN VarOrderDate    datetime,
IN VarCompanyName    varchar(100),
IN VarAddress1    varchar(500),
IN VarAddress2    varchar(500),
IN VarCity    varchar(50),
IN VarState    varchar(45),
IN VarCountry    varchar(45),
IN VarZipCode    varchar(45),
IN VarPhoneNumber    varchar(45),
IN VarItemNumber    varchar(45),
IN VarItemDescription    varchar(100),
IN VarItemOption    varchar(45),
IN VarEmail    varchar(45),
IN VarQuantity    int(11),
IN VarProductCost   double,
IN VarCatalogCode    varchar(45),
IN VarCatalogName    varchar(100),
IN VarDateProcessed    varchar(45),
IN VarStatus    varchar(45),
IN VarQuantityShipped    int(11),
IN VarTrackingNumber    varchar(45),
IN VarCourierName    varchar(50),
IN VarMemo varchar(500)
)
BEGIN
INSERT INTO`shobingg_P2M_Operations`.`DailyOrders`
(`ID`,
`GRSOrderNum`,
`P2MOrderNumber`,
`EmployeeID`,
`FirstName`,
`LastName`,
`OrderDate`,
`Company`,
`Address1`,
`Address2`,
`City`,
`State`,
`Country`,
`ZipCode`,
`PhoneNumber`,
`ItemNumber`,
`ItemDescription`,
`ItemOption`,
`Quantity`,
`Email`,
`ProductCost`,
`CatalogCode`,
`DateProcessed`,
`Status`,
`QuantityShipped`,
`TrackingNumber`,
`CourierName`,
`Memo`,
`DeletionFlag`,
`RedemptionAmount`,
`PointBillingRate`)
VALUES
(VarID,
VarGRSOrderNum,
VarPartnerSystemOrderNum,
VarEmployeeID,
VarFirstName,
VarLastName,
VarOrderDate,
VarCompanyName,
VarAddress1,
VarAddress2,
VarCity,
VarState,
VarCountry,
VarZipCode,
VarPhoneNumber,
VarItemNumber,
VarItemDescription,
VarItemOption,
VarQuantity,
VarEmail,
VarProductCost,
VarCatalogCode,
VarDateProcessed,
VarStatus,
VarQuantityShipped,
VarTrackingNumber,
VarCourierName,
VarMemo,
0,
0,
1)
on duplicate key update
P2MOrderNumber=VarPartnerSystemOrderNum,
EmployeeID=VarEmployeeID,
FirstName=VarFirstName,
LastName=VarLastName,
OrderDate=VarOrderDate,
Company=VarCompanyName,
Address1=VarAddress1,
Address2=VarAddress2,
City=VarCity,
State=VarState,
Country=VarCountry,
ZipCode=VarZipCode,
PhoneNumber=VarPhoneNumber,
ItemNumber=VarItemNumber,
ItemDescription=VarItemDescription,
ItemOption=VarItemOption,
Quantity=VarQuantity,
Email=VarEmail,
ProductCost=VarProductCost,
CatalogCode=VarCatalogCode,
CatalogName=VarCatalogName,
DateProcessed=VarDateProcessed,
Status=VarStatus,
QuantityShipped=VarQuantityShipped,
TrackingNumber=VarTrackingNumber,
CourierName=VarCourierName,
Memo=VarMemo,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertGiftCardsInvoice
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertGiftCardsInvoice`(

IN VarOrderId varchar(45),
IN VarEmployeeID varchar(45),
IN VarLineNumber varchar(45),
IN VarRewardName varchar(500) ,
IN VarOrderDate date,
IN VarLocalCost double,
IN VarQuantity int(11),
IN VarReasonofReturen varchar(50),
IN VarCountry varchar(45),
IN VarSKU varchar(45)

)
BEGIN
DECLARE CurrencyID int(11);
DECLARE FeesID int(11);

Select id into CurrencyID from `shobingg_P2M_Operations`.`Currency`
where lower(`Country`) like lower(VarCountry);

Select id into FeesID from `shobingg_P2M_Operations`.`Fees` 
where ((lower(`RewardName`) = Lower(VarRewardName))and `SKU`= VarSKU);


INSERT INTO `shobingg_P2M_Operations`.`Gift Cards Invoice`
(`OrderId`,
`EmployeeID`,
`LineNumber`,
`RewardName`,
`OrderDate`,
`LocalCost`,
`Quantity`,
`ReasonofReturen`,
`Currency_ID`,
`Fees_ID`,
`DeletionFlag`,
`Country`)

values
(VarOrderId,
VarEmployeeID,
VarLineNumber,
VarRewardName,
VarOrderDate,
VarLocalCost,
VarQuantity,
VarReasonofReturen,
CurrencyID,
FeesID,
0,
Country)

on duplicate key update 
EmployeeID=VarEmployeeID,
LineNumber=VarLineNumber,
RewardName=VarRewardName,
OrderDate=VarOrderDate,
LocalCost=VarLocalCost,
Quantity=VarQuantity,
ReasonofReturen=VarReasonofReturen,
Currency_ID=CurrencyID,
Fees_ID=FeesID,
DeletionFlag=0,
Country=VarCountry;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertMember
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertMember`(

IN VarPin varchar(45),
IN VarEmployeeN  varchar(45),
IN VarFirstName varchar(45),
IN VarLastName varchar(45),
IN VarEmail varchar(70),
IN VarJobTitle varchar(100),
IN VarHireDate date,
IN VarBirthDate date,
IN VarAddress1 varchar(45),
IN VarAddress2 varchar(45),
IN VarCity varchar(45),
IN VarProvinceState varchar(45),
IN VarCountry varchar(45),
IN VarPostalCode varchar(45),
IN VarTelAreaCode varchar(45),
IN VarTelephoneNumber varchar(45),
IN VarTelephoneCountryCode varchar(45),
IN VarLanguageCode varchar(45),
IN VarDepartmentCode varchar(45),
IN VarDeptName varchar(45),
IN VarAccessGroups varchar(200),
IN VarEmployeeType varchar(45),
IN VarDeletionDate varchar(45),
IN VarPassword varchar(45),
IN VarDisableLogin varchar(45),
IN VarDisableEarn varchar(45),
IN VarUsername varchar(45),
IN VarFnameAR varchar(100),
IN VarLnameAR varchar(100),
IN VarPositionAr varchar(500),
IN VarMNA varchar(45),
IN VarMNE varchar(45),
IN VarMETA varchar(45),
IN VarChild varchar(45),
IN VarMrgDate date,
IN VarCompName varchar(45)


)
BEGIN
DECLARE CompID int(11); 
Declare DeptID int(11);
Declare Varexist int(11);


select id into DeptID from `shobingg_P2M_Operations`.`Department` where `Name` like VarDeptName;
select id into CompID from `shobingg_P2M_Operations`.`Company` where `Name` like VarCompName;

select count(*) into Varexist from`shobingg_P2M_Operations`.`Members` 
where ( `EmployeeNumber`=VarEmployeeN and `Comp_Id`=CompID );

if (Varexist > 0) then 
update `shobingg_P2M_Operations`.`Members` 
set 
Pin=VarPin,
FirstName=VarFirstName,
LastName=VarLastName,
Email=VarEmail,
JobTitle=VarJobTitle,
HireDate=VarHireDate,
BirthDate=VarBirthDate,
Address1=VarAddress1,
Address2=VarAddress2,
City=VarCity,
Province_State=VarProvinceState,
Country=VarCountry,
PostalCode=VarPostalCode,
TelephoneAreaCode=VarTelAreaCode,
TelephoneNumber=VarTelephoneNumber,
TelephoneCountryCode=VarTelephoneCountryCode,
LanguageCode=VarLanguageCode,
DepartmentCode=VarDepartmentCode,
DepartmentName=(select `Name` from `shobingg_P2M_Operations`.`Department` where `ID`=VarDepartmentCode ),
AccessGroups=VarAccessGroups,
EmployeeType=VarEmployeeType,
DeletionFlag=0,
DeletionDate=VarDeletionDate,
Password=VarPassword,
DisableLogin=VarDisableLogin,
DisableEarn=VarDisableEarn,
Username=VarUsername,
FnameAR=VarFnameAR,
LnameAR=VarLnameAR,
PositionAr=VarPositionAr,
MNA=VarMNA,
MNE=VarMNE,
META=VarMETA,
Child=VarChild,
MrgDate=VarMrgDate,
Comp_Id=CompID,
Dept_ID=DeptID
where ( `EmployeeNumber`=VarEmployeeN and `Comp_Id`=CompID );

else

INSERT INTO `shobingg_P2M_Operations`.`Members`
(`Pin`,
`EmployeeNumber`,
`FirstName`,
`LastName`,
`Email`,
`JobTitle`,
`HireDate`,
`BirthDate`,
`Address1`,
`Address2`,
`City`,
`Province_State`,
`Country`,
`PostalCode`,
`TelephoneAreaCode`,
`TelephoneNumber`,
`TelephoneCountryCode`,
`LanguageCode`,
`DepartmentCode`,
`DepartmentName`,
`AccessGroups`,
`EmployeeType`,
`DeletionFlag`,
`DeletionDate`,
`Password`,
`DisableLogin`,
`DisableEarn`,
`Username`,
`FnameAR`,
`LnameAR`,
`PositionAr`,
`MNA`,
`MNE`,
`META`,
`Child`,
`MrgDate`,
`Comp_Id`,
`Dept_ID`)
VALUES

(VarPin,
VarEmployeeN,
VarFirstName,
VarLastName,
VarEmail,
VarJobTitle,
VarHireDate,
VarBirthDate,
VarAddress1,
VarAddress2,
VarCity,
VarProvinceState,
VarCountry,
VarPostalCode,
VarTelAreaCode,
VarTelephoneNumber,
VarTelephoneCountryCode,
VarLanguageCode,
VarDepartmentCode,
VarDeptName,
VarAccessGroups,
VarEmployeeType,
0,
VarDeletionDate,
VarPassword,
VarDisableLogin,
VarDisableEarn,
VarUsername,
VarFnameAR,
VarLnameAR,
VarPositionAr,
VarMNA,
VarMNE,
VarMETA,
VarChild,
VarMrgDate, 
CompID,
DeptID);
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertOldNotShipped
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertOldNotShipped`(
IN VarPIN    varchar(45),
IN VarEmployeeID    varchar(45),
IN VarFirstName    varchar(45),
IN VarLastName    varchar(45),
IN VarDeptName    varchar(100),
IN VarDeptCode    varchar(45),
IN VarJobTitle    varchar(100),
IN VarPhoneNumber    varchar(45),
IN VarCatalogName    varchar(100),
IN VarRewardName    varchar(500),
IN VarQuantity   int(11),
IN VarDetails    varchar(1500),
IN VarHighestLevelCategory    varchar(55),
IN VarLowestLevelCategory    varchar(55),
IN VarCompany    varchar(100),
IN VarName    varchar(70),
IN VarAddress1    varchar(500),
IN VarAddress2    varchar(500),
IN VarCity    varchar(50),
IN VarState    varchar(45),
IN VarZipCode    varchar(45),
IN VarCountry    varchar(45),
IN VarP2MOrderNumber    varchar(45),
IN VarOrderStatus    varchar(45),
IN VarDiscountCoupon    varchar(45),
IN VarRedemptionAmount    varchar(45),
IN VarDiscountApplied    varchar(45),
IN VarMemberPaid    varchar(45),
IN VarPointBillingRate    double,
IN VarordarDate    date,
IN VarGRSOrderNum    varchar(45),
IN VarPartnerSystemOrderNum    varchar(45),
IN VarItemNumber    varchar(45),
IN VarItemDescription    varchar(100),
IN VarItemOption    varchar(45),
IN VarEmail    varchar(45),
IN VarProductCost   double,
IN VarCatalogCode    varchar(45),
IN VarDateProcessed    varchar(45),
IN VarQuantityShipped    int(11),
IN VarTrackingNumber    varchar(45),
IN VarCourierName    varchar(50),
IN VarMemo varchar(500)
)
BEGIN
INSERT INTO `shobingg_P2M_Operations`.`Old Not shipped_Orders`
(`PIN`,
`EmployeeID`,
`FirstName`,
`LastName`,
`DeptName`,
`DeptCode`,
`JobTitle`,
`PhoneNumber`,
`CatalogName`,
`RewardName`,
`Quantity`,
`Details`,
`HighestLevelCategory`,
`LowestLevelCategory`,
`Company`,
`Name`,
`Address1`,
`Address2`,
`City`,
`State`,
`ZipCode`,
`Country`,
`P2MOrderNumber`,
`OrderStatus`,
`DiscountCoupon`,
`RedemptionAmount`,
`DiscountApplied`,
`MemberPaid`,
`PointBillingRate`,
`ordarDate`,
`GRSOrderNum`,
`PartnerSystemOrderNum`,
`ItemNumber`,
`ItemDescription`,
`ItemOption`,
`Email`,
`ProductCost`,
`CatalogCode`,
`DateProcessed`,
`QuantityShipped`,
`TrackingNumber`,
`CourierName`,
`Memo`,
`DeletionFlag`)
VALUES
(VarPIN,
VarEmployeeID,
VarFirstName,
VarLastName,
VarDeptName,
VarDeptCode,
VarJobTitle,
VarPhoneNumber,
VarCatalogName,
VarRewardName,
VarQuantity,
VarDetails,
VarHighestLevelCategory,
VarLowestLevelCategory,
VarCompany,
VarName,
VarAddress1,
VarAddress2,
VarCity,
VarState,
VarZipCode,
VarCountry,
VarP2MOrderNumber,
VarOrderStatus,
VarDiscountCoupon,
VarRedemptionAmount,
VarDiscountApplied,
VarMemberPaid,
VarPointBillingRate,
VarordarDate,
VarGRSOrderNum,
VarPartnerSystemOrderNum,
VarItemNumber,
VarItemDescription,
VarItemOption,
VarEmail,
VarProductCost,
VarCatalogCode,
VarDateProcessed,
VarQuantityShipped,
VarTrackingNumber,
VarCourierName,
VarMemo,
0)
 on duplicate key update 
 PIN=VarPIN,
EmployeeID=VarEmployeeID,
FirstName=VarFirstName,
LastName=VarLastName,
DeptName=VarDeptName,
DeptCode=VarDeptCode,
JobTitle=VarJobTitle,
PhoneNumber=VarPhoneNumber,
CatalogName=VarCatalogName,
RewardName=VarRewardName,
Quantity=VarQuantity,
Details=VarDetails,
HighestLevelCategory=VarHighestLevelCategory,
LowestLevelCategory=VarLowestLevelCategory,
Company=VarCompany,
Name=VarName,
Address1=VarAddress1,
Address2=VarAddress2,
City=VarCity,
State=VarState,
ZipCode=VarZipCode,
Country=VarCountry,
P2MOrderNumber=VarP2MOrderNumber,
OrderStatus=VarOrderStatus,
DiscountCoupon=VarDiscountCoupon,
RedemptionAmount=VarRedemptionAmount,
DiscountApplied=VarDiscountApplied,
MemberPaid=VarMemberPaid,
PointBillingRate=VarPointBillingRate,
ordarDate=VarordarDate,
GRSOrderNum=VarGRSOrderNum,
PartnerSystemOrderNum=VarPartnerSystemOrderNum,
ItemNumber=VarItemNumber,
ItemDescription=VarItemDescription,
ItemOption=VarItemOption,
Email=VarEmail,
ProductCost=VarProductCost,
CatalogCode=VarCatalogCode,
DateProcessed=VarDateProcessed,
QuantityShipped=VarQuantityShipped,
TrackingNumber=VarTrackingNumber,
CourierName=VarCourierName,
Memo=VarMemo,
DeletionFlag=0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsertOman
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsertOman`(

IN VarOrderNo varchar(45),
IN VarOrderDate date,
IN VarMemberName varchar(45),
IN VarTotalcost double,
IN VarDeliveryfees double,
IN VarTotalCostwithDelivery double,
IN VarStatus varchar(45),
IN VarDeliveryDate date,
IN VarCardTypeandAmount varchar(50),
IN VarQuantity int(11)

)
BEGIN
if not exists(select * from `shobingg_P2M_Operations`.`Oman Float` where  `OrderNo`=VarOrderNo)then
INSERT INTO `shobingg_P2M_Operations`.`Oman Float`
(`OrderNo`,
`OrderDate`,
`MemberName`,
`Totalcost`,
`Deliveryfees`,
`TotalCostwithDelivery`,
`Status`,
`CardTypeandAmount`,
`Quantity`,
`DeletionFlag`)

VALUES

(VarOrderNo,
VarOrderDate,
VarMemberName,
VarTotalcost,
VarDeliveryfees,
VarQuantity*(VarTotalcost+VarDeliveryfees),
VarStatus,
VarCardTypeandAmount,
VarQuantity,
0);
else 

update `shobingg_P2M_Operations`.`Oman Float`

set OrderDate=VarOrderDate,
MemberName=VarMemberName,
Totalcost=VarTotalcost,
Deliveryfees=VarDeliveryfees,
TotalCostwithDelivery=VarTotalcost+VarDeliveryfees,
Status=VarStatus,
DeliveryDate=VarDeliveryDate,
CardTypeandAmount=VarCardTypeandAmount,
Quantity=VarQuantity,
DeletionFlag=0
where `OrderNo`=VarOrderNo;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpsrtCurrency
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `UpsrtCurrency`(

IN VarName varchar(45) ,
IN VarCountry varchar(45),
IN VarPointValue_Rate double,
in VarUSDRate double,
in VarISO varchar(45)
)
BEGIN

INSERT INTO `shobingg_P2M_Operations`.`Currency`
(
`Name`,
`Country`,
`PointValue_Rate`,
`USDRate`,
`DeletionFlag`,
`ISO`)
VALUES
(
VarName,
VarCountry,
VarPointValue_Rate,
VarUSDRate,
0,
VarISO);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure getOmanAmount
-- -----------------------------------------------------

DELIMITER $$
USE `shobingg_P2M_Operations`$$
CREATE DEFINER=`shobingg_P2M`@`82.212.%.%` PROCEDURE `getOmanAmount`()
BEGIN
select * from `shobingg_P2M_Operations`.`Oman Amount`;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
